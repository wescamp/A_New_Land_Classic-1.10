#textdomain wesnoth-A_New_Land_Classic

# utils/prestart.cfg

#define ANL_PRESTART KEY_WML
    # These actions install events and menu items, and set variables
    # to their initial values. A prestart event is the best place to
    # call this macro. KEY_WML must contain:
    #  * era= "standard" or "expanded"
    #  * worker= unit types
    #  * researcher= unit types

    # Create global array.
    #  * anl_side[0] is common to all sides.
    #  * anl_side[1], anl_side[2], and so on are for each side.
    [set_variables]
        name=anl_side
        [value]             # anl_side[0]
            {KEY_WML}
        [/value]
    [/set_variables]

    # Allow researchers to level up and continue research. Expand
    # anl_side[0].researchers with advancements.
    [set_variables]
        name=t.ary
        [split]
            list=$anl_side[0].researcher
            key=id
            separator=,
        [/split]
    [/set_variables]
    {FOREACH t.ary i}
        [store_unit_type]
            type=$t.ary[$i].id
            variable=t.type
        [/store_unit_type]
        {IF_VAR t.type.advances_to not_equals null (
            [then]
                # Append advancements to t.ary. Our FOREACH loop will
                # increment i until end of array, so our loop will
                # continue to find advancements of advancements.
                [set_variables]
                    name=t.ary
                    mode=append
                    [split]
                        list=$t.type.advances_to
                        key=id
                        separator=,
                    [/split]
                [/set_variables]
            [/then]
        )}
    {NEXT i}
    [set_variable]
        name=anl_side[0].researcher
        [join]
            variable=t.ary
            key=id
            separator=,
        [/join]
    [/set_variable]
    {CLEAR_VARIABLE t}

    # Define functions. Set events, menu items and variables.
    {ANL_INIT:HELP}
    {ANL_INIT:LEADER_OPTIONS}
    {ANL_INIT:RECRUITS}
    {ANL_INIT:RESEARCH_OPTIONS}
    {ANL_INIT:SIDE_TURN}
    {ANL_INIT:WORKER_OPTIONS}

    [store_side]
        variable=ary_sides
    [/store_side]
    {FOREACH ary_sides i}
        {VARIABLE side $ary_sides[$i].side}

        # Set faction. Assume Loyalists, but change faction
        # if side recruits some other worker.
        {VARIABLE anl_side[$side].faction "Loyalists"}
        [set_variables]
            name=ary_recruits
            [split]
                list=$ary_sides[$i].recruit
                key=type
                separator=,
            [/split]
        [/set_variables]
        {FOREACH ary_recruits j}
            [switch]
                variable=ary_recruits[$j].type
                [case]
                    value="Ruffian"
                    {VARIABLE anl_side[$side].faction "Outlaws"}
                [/case]
                [case]
                    value="Goblin Spearman"
                    {VARIABLE anl_side[$side].faction "Orcs"}
                [/case]
                [case]
                    value="Walking Corpse"
                    {VARIABLE anl_side[$side].faction "Undead"}
                [/case]
            [/switch]
        {NEXT j}
        {CLEAR_VARIABLE ary_recruits}

        # Set default for all sides.
        {VARIABLE anl_side[$side].farming.progress 0}
        {VARIABLE anl_side[$side].mining.progress 0}
        {VARIABLE anl_side[$side].warfare.progress 0}
        {VARIABLE anl_side[$side].warfare.allow yes}
        {VARIABLE anl_side[$side].warfare.troop_available 0}
        {VARIABLE anl_side[$side].research.current_target "agriculture"}
        {VARIABLE anl_side[$side].leader_option_1.progress 0}
        {VARIABLE anl_side[$side].leader_option_2.progress 0}
        {VARIABLE anl_side[$side].leader_option_3.progress 0}

        [switch]
            variable=anl_side[$side].faction
            [case]
                value="Loyalists"
                {VARIABLE anl_side[$side].farming.target 4}
                {VARIABLE anl_side[$side].farming.gold 3}
                {VARIABLE anl_side[$side].mining.target 5}
                {VARIABLE anl_side[$side].mining.gold 4}
                {VARIABLE anl_side[$side].warfare.target 4}
                {VARIABLE anl_side[$side].leader_option_1.target 4}
                {VARIABLE anl_side[$side].leader_option_2.target 4}
                {VARIABLE anl_side[$side].leader_option_3.target 4}
            [/case]
            [case]
                value="Outlaws"
                {VARIABLE anl_side[$side].farming.target 3}
                {VARIABLE anl_side[$side].farming.gold 2}
                {VARIABLE anl_side[$side].mining.target 3}
                {VARIABLE anl_side[$side].mining.gold 2}
                {VARIABLE anl_side[$side].warfare.target 4}
                {VARIABLE anl_side[$side].leader_option_1.target 5}
                {VARIABLE anl_side[$side].leader_option_2.target 5}
                {VARIABLE anl_side[$side].leader_option_3.target 5}
            [/case]
            [case]
                value="Orcs"
                {VARIABLE anl_side[$side].farming.target 3}
                {VARIABLE anl_side[$side].farming.gold 2}
                {VARIABLE anl_side[$side].mining.target 5}
                {VARIABLE anl_side[$side].mining.gold 4}
                {VARIABLE anl_side[$side].warfare.target 3}
                {VARIABLE anl_side[$side].leader_option_1.target 4}
                {VARIABLE anl_side[$side].leader_option_2.target 4}
                {VARIABLE anl_side[$side].leader_option_3.target 4}
            [/case]
            [case]
                value="Undead"
                {VARIABLE anl_side[$side].farming.target 4}
                {VARIABLE anl_side[$side].farming.gold 3}
                {VARIABLE anl_side[$side].mining.target 4}
                {VARIABLE anl_side[$side].mining.gold 3}
                {VARIABLE anl_side[$side].warfare.target 4}
                {VARIABLE anl_side[$side].leader_option_1.target 4}
                {VARIABLE anl_side[$side].leader_option_2.target 4}
                {VARIABLE anl_side[$side].leader_option_3.target 4}
            [/case]
            [else]
                {ERROR "impossible faction: $anl_side[$side].faction"}
            [/else]
        [/switch]

        # Set $anl_side[$side].allies to a comma list of allies, for
        # future use with [message]side_for= in messages to allies.
        # Assumes that list never changes after prestart.
        [store_side]
            [allied_with]
                side=$side
            [/allied_with]
            variable=ary_allies
        [/store_side]
        [set_variable]
            name=anl_side[$side].allies
            [join]
                variable=ary_allies
                key=side
                separator=,
            [/join]
        [/set_variable]
    {NEXT i}
    {CLEAR_VARIABLE ary_sides,side,ary_allies}
#enddef
